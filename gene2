#!/usr/bin/python

import argparse
import re
from fileinput import filename
count=0
parser = argparse.ArgumentParser(description='genefiles')

parser.add_argument('filename', type=argparse.FileType('r'), help='Insert a File name')
parser.add_argument('-t', '--TaxID', type=int, nargs='+', action='store', required='true', dest='inputID', help='Add ID Values')
args = parser.parse_args()
print(args.inputID)




# ln = args.filename.readline().split("\t")
# print(ln)
# #
# # #Dictionary
#
d2 = {'Synonyms': 1, 'TaxIdCount':1}
d = vars(args)
d.update(d2)
print(d)

# #
#
# # d.update(d1)
if 'Synonyms' in d2:
    d2['Synonyms']+=1
else:
    d['Synonyms'] = 1
if 'TaxIdCount' in d2:
    d2['TaxIdCount']+=1
else:
    d['TaxIdCount'] = 1

# print(d2)
# TaxIdCount=[]
# for TaxIDs in ln:
#     TaxIdCount.append((ln.count(TaxIDs)))
# print(sum(TaxIdCount))

for ln in args.filename.readlines().split(' '):
print(ln)

# for input in args.TaxID:
#     input = vars(args.TaxID)
#     print(input)
def inputID():
    atlTaxId=0
    for inputID in ln:
        count =0
        if inputID in ln:
            count+=1
            print(count)
# k=0
#
# if inputID in ln:
#     k=k+1










# # print(d)
# x = d.get('TaxID')
# y = d.get('filename')
#
#
# # ln = args.filename.readline().split('\t')
#
# print(fr)
# # # print(d)
# # occur=0
# # for TaxID in ln:
# #     count+=1
# #     if TaxID in ln:
# #         occur+=1
#
#
# print(d)
# # print(count)
# # print(occur)






# print(args.TaxIdList)

# lineNum=0
# count = 0
#
#
# for TaxIDs in ln:
#     count=0
#     if TaxIDs in ln:
#         count+=1
#         continue
#
# print(count)




#     print( args.TaxID)
# #print(ln)
# # print(input)





# -04/03/20: Def count
#
# def count_char(ln):
#     countNum= 0
#     for TaxIdList in ln:
#         if (TaxIdList in ln):
#             countNum[TaxIdList] +=1
#         else:
#             countNum[TaxIdList] = 1
#     return countNum
# #
# # #     for args.TaxID in ln:
# # #         countNum = 0
# # #         if args.TaxID in ln:
# #             countNum +=1
# #         else:
# #             return "ID Not Found"
#

#
#
#
#
# # len(set(open(yourdictfile).read().split()))
# #

#
#
#
#
#
#
#
# # ------------------04/02/2020---------------------------------
# # TaxID Argument:: Error: error: argument numberInput: invalid int value: 'All_Data.gene_info'
# # parser = argparse.ArgumentParser(description='TaxID')
# # parser.add_argument('numberInput', type=int, nargs='+', help='an integer for TaxID')
# # results = parser.parse_args()
#
#
# # usr_str_input = input('Input ID Num:')
# # for file_str_input in fr:
# #     if usr_str_input in file_str_input.split('\t'):
# #         for usr_str_input in file_str_input:
# #             occur += 1
# #         print("There are", occur, "Genes ID's in this Tax ID")
# # print args.filename.readlines()
# with open(args.filename) as infile:
# print('TaxIDs = {!r}'.format(args.TaxIDs))
