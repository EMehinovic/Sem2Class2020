#!/usr/bin/python

import argparse

parser = argparse.ArgumentParser(description='genefiles')

parser.add_argument('filename', type=argparse.FileType('r'), help='Insert a File name')
parser.add_argument('-t', '--TaxID', type=str, nargs='*', action='store', required='true', dest='TAXID', help='Add ID Values')
parser.add_argument('-i', type=str, nargs='*', action='store', default=False, help='Case Sensetivity on: type yes or no')
args = parser.parse_args()

# Define variables
taxIDdict = {}
Synlistfull = {}
dicKey={}
SymbolDict={}
GeneDict={}
Syncount=0
GeneCount=0
SymbCount=0


# DONE: 1) Loop through the input file line by line
# Loop through file line by line
for ln in args.filename:
    
    if not ln.startswith('#'):

#Case Sensitive no:
        if 'no' in args.i:

            ln = ln.lower()

        else:

            ln
# TODO 8: add a test to ignor the headder line which begins with a "#"

    # DONE: 2) for the current line get the current Tax_id, Symbol, Synonyms and GeneID into variables
    #   parse synonyms delimited by '|" to a list
        lnsplit = ln.strip("\t").split("\t")
        tax_id=lnsplit[0]
        GeneID=lnsplit[1]
        Symbol=lnsplit[2]
        Synonyms=lnsplit[4]
        Synlist=Synonyms.split("|")

    # print(Synlist)

    # DONE: 3) Test if the tax_id for this line is in the list input from the command line by the user
    #   If so do 4 and 5
    #   else next line
    #   increment taxID dictionary, key = ignored
    #   if not add it to the Symbol dictionary and set count to 1, if so increment its count
    if tax_id in args.TAXID:

        # DONE: 4)
        #   increment taxID dictionary
        #   Check to see if we have seen the Symbol before in the Symbol dictionary
        if tax_id in taxIDdict.keys():

            taxIDdict[tax_id] += 1

        else:

            taxIDdict[tax_id]=1

    else:
        if 'taxon ignored' in taxIDdict.keys():

            taxIDdict['taxon ignored'] += 1

        else:

            taxIDdict['taxon ignored'] = 1

  #Syn Dict- Might be wrong- probably is
    if tax_id in args.TAXID:

        for dicKey in Synlist:

            if not dicKey==("-"):

                if dicKey in Synlistfull.keys():

                    Synlistfull[dicKey]+=1

                else:
                    Synlistfull[dicKey]=1

                    Syncount += 1

            else:
                    Synlistfull['not']=1


#Symbol Dict
    if tax_id in args.TAXID:

            if Symbol in SymbolDict:

                SymbolDict[Symbol]+=1

            else:

                SymbolDict[Symbol]=1

            SymbCount+=1
#GeneID Dict
    if tax_id in args.TAXID:

        if GeneID in GeneDict:

            GeneDict[GeneID]+=1
        else:
            GeneDict[GeneID]=1

        GeneCount+=1





print('TAXID')
print(taxIDdict)
print('\nGeneIDs' )
print(GeneCount)
print(GeneDict)
print('\nSymbolIDs')
print(SymbCount)
print(SymbolDict)
print('\nTotal Synonyms Seen')
print(Syncount)
print('\nSynonymList View')
print(Synlistfull)





# TODO: 5)
#   Add code to populate symbolDict
#   Add code to populate synonymlDict, include splitting pipe character delimited synonyms
#   Add code to populate geneIDdict

# print (taxIDdict)

# TODO: 6)
#   After all lines of the file have been processed, report on the Symbols and the Synonyms
#   how may total entries in taxID dictionary, how many for each taxID and "ignored"
#   how many total symbols and
#   how many total synonyms

# TODO: 7)
#   How many are unique?
#   How many are present more than once?

# TODO 9)
#   Do we need to compare gene and synonyms case insensitaivly?
#   add command line option "-i", flag boolean, default false
#   if the option is set all comparisons will be case insensitive
#   otherwise all comparisons are case sensitive